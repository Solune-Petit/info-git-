<?xml version="1.0" encoding="UTF-8"?>
<root xmlns:nsd="https://structorizer.fisch.lu" version="3.30-13" preRepeat="until " postFor="to" preReturn="return" postForIn="in" preWhile="while " output="OUTPUT" input="INPUT" preFor="for" preExit="exit" preLeave="leave" ignoreCase="true" preThrow="throw" preForIn="foreach" stepFor="by" author="petit" created="2023-10-05" changedby="petit" changed="2023-10-05" origin="Structorizer 3.30-13" text="&#34;mastermind (main) solune et mathias&#34;" comment="&#34;&#34;" color="ffffff" type="program" style="nice">
	<children>
		<while text="&#34;tant que le joueur veux jouer&#34;" comment="&#34;&#34;" color="ffffff" disabled="0">
			<qWhile>
				<instruction text="&#34;générer un code secret en fonction des rêgles du mastermind et le mettre dans pionCouleur&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
				<while text="&#34;tant que la variable pionJoueur est différente de la variable poinCouleur ou que ça fait 10 fois que le joueur rentre une entrée&#34;" comment="&#34;&#34;" color="ffffff" disabled="0">
					<qWhile>
						<instruction text="&#34;demander ce que le joueur veut jouer et mettre sa réponse dans pionJoueur&#34;,&#34;apeller la fonction &#34;&#34;comparer&#34;&#34;&#34;,&#34;afficher la variable resultat&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
					</qWhile>
				</while>
				<instruction text="&#34;demander si le joueur veux recommancer&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
			</qWhile>
		</while>
		<forever comment="&#34;&#34;" color="ffffff" disabled="0">
			<qForever>
				<instruction text="&#34;fonction comparer&#34;" comment="&#34;&#34;" color="ff8080" rotated="0" disabled="0"></instruction>
				<for text="&#34;for i &#60;- 1 to 8 by 2&#34;" comment="&#34;&#34;" counterVar="i" startValue="1" endValue="8" stepConst="2" style="COUNTER" color="ffffff" disabled="0">
					<qFor>
						<instruction text="&#34;regarder le charactère en position &#34;&#34;i&#34;&#34; dans la variable pionJoueur et l'insérer dans la variable verification&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
						<alternative text="&#34;si la variable verification est le même que dans pionCouleur à la position i&#34;" comment="&#34;&#34;" color="ffffff" disabled="0">
							<qTrue>
								<instruction text="&#34;mettre dans la variable resultat en couleur vert la variable verification + &#34;&#34; &#34;&#34;&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
							</qTrue>
							<qFalse>
								<alternative text="&#34;si la variable verification est le même que dans pionCouleur à nimporte quel position&#34;" comment="&#34;&#34;" color="ffffff" disabled="0">
									<qTrue>
										<instruction text="&#34;mettre dans la variable resultat en couleur orange la variable verifiaction + &#34;&#34; &#34;&#34;&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
									</qTrue>
									<qFalse>
										<instruction text="&#34;mettre dans la variable resultat en couleur rouge la variable verifiaction + &#34;&#34; &#34;&#34;&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
									</qFalse>
								</alternative>
							</qFalse>
						</alternative>
					</qFor>
				</for>
			</qForever>
		</forever>
	</children>
</root>